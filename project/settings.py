"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# .env 파일 읽기
from dotenv import load_dotenv

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")
KAKAO_REST_API_KEY = os.getenv("KAKAO_REST_API_KEY")
TMAP_API_KEY = os.getenv("TMAP_API_KEY")
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# 추가 API 키들은 제거됨 (구글맵 리뷰만 사용)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lsit9-abu#q2+_(&s)&cyff$qcve$6uu2z6zb5vwhq&)qmvp(q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['api.sein0327.shop','sein0327.shop', 'www.sein0327.shop', 'localhost', '127.0.0.1', '15.164.26.158']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'places',
    'wiki',
    'rest_framework',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'corsheaders',
]

REST_FRAMEWORK = {
  'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
  'TITLE': 'Taroute API',
  'DESCRIPTION': '사용자 취향 기반 최적 장소 추천/경로 안내 API',
  'VERSION': '1.0.0',
  'SERVE_INCLUDE_SCHEMA': False, # 스키마 OAS3 Meta정보 비노출 처리
  'COMPONENT_SPLIT_REQUEST': True, # 웹에서 파일 업로드 기능
  'SWAGGER_UI_DIST': 'SIDECAR', # 정적파일 경로
  'REDOC_DIST': 'SIDECAR',
  "SWAGGER_UI_SETTINGS": {
        "operationsSorter": "alpha",  # API operation을 이름순 정렬
        "tagsSorter": "alpha",        # 태그를 이름순 정렬
    },

  'CONTACT': {
    'name': 'Sein Oh',
    'email': 'ohsein37@gmail.com',
    'url': 'sein0327.shop',
  }

  
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware", #CORS 추가
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = []
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [ #API 호출할 수 있는 출처 목록
  "http://127.0.0.1:8000",
  "https://127.0.0.1:8000",
  "http://localhost:5173",
  "https://sein0327.shop",
  "https://api.sein0327.shop",
  "https://taroute.netlify.app"
]

CSRF_TRUSTED_ORIGINS = [ #CSRF 토큰 검증 통과
  "http://127.0.0.1:8000",
  "https://127.0.0.1:8000",
  "http://localhost:5173",
  "https://sein0327.shop",
  "https://api.sein0327.shop",
  "https://taroute.netlify.app"
]
CORS_ALLOW_CREDENTIALS = True #HTTP 자격증명 추가
CSRF_COOKIE_SECURE = True #운영서버에서 True로 킬 것, http 보안!
SESSION_COOKIE_SECURE = True #위와 동일

SESSION_COOKIE_AGE = 86400  # 초 단위: 24시간 = 86400초
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 브라우저를 닫아도 세션 유지

SESSION_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SAMESITE = 'None'