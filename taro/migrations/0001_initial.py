# Generated by Django 5.2.5 on 2025-08-15 07:48

import django.db.models.deletion
import django.utils.timezone
import taro.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaroConversation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('session_key', models.CharField(db_index=True, help_text='사용자 세션 키 (익명 사용자 지원)', max_length=64)),
                ('user_identifier', models.CharField(blank=True, help_text='사용자 식별자 (로그인 사용자용)', max_length=128, null=True)),
                ('conversation_stage', models.CharField(choices=[('greeting', '인사 단계'), ('questioning', '질문 단계'), ('analyzing', '분석 단계'), ('recommending', '추천 단계'), ('completed', '완료 단계')], default='greeting', help_text='현재 대화 진행 단계', max_length=20)),
                ('question_count', models.IntegerField(default=0, help_text='현재까지 진행된 질문 수')),
                ('max_questions', models.IntegerField(default=20, help_text='최대 질문 수 (기본 20개)')),
                ('conversation_history', models.JSONField(default=taro.models.default_json, help_text='전체 대화 히스토리 [{role, content, timestamp}, ...]')),
                ('user_preferences', models.JSONField(default=taro.models.default_json, help_text='사용자 취향 분석 데이터 (장소 유형, 분위기, 활동 등)')),
                ('user_latitude', models.FloatField(blank=True, help_text='사용자 현재 위치 위도', null=True)),
                ('user_longitude', models.FloatField(blank=True, help_text='사용자 현재 위치 경도', null=True)),
                ('card_draw_count', models.IntegerField(default=0, help_text='카드 뽑기 횟수 (최대 2회: 초기 + 다시뽑기 1회)')),
                ('max_card_draws', models.IntegerField(default=2, help_text='최대 카드 뽑기 횟수')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='대화 시작 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='마지막 업데이트 시간')),
                ('last_ai_response', models.TextField(blank=True, help_text='마지막 AI 응답 (캐시용)', null=True)),
            ],
            options={
                'verbose_name': '타로 대화',
                'verbose_name_plural': '타로 대화들',
                'indexes': [models.Index(fields=['session_key'], name='taro_taroco_session_a6ef7a_idx'), models.Index(fields=['conversation_stage'], name='taro_taroco_convers_50643f_idx'), models.Index(fields=['created_at'], name='taro_taroco_created_6d0c0c_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaroCard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('card_id', models.CharField(help_text='카드 고유 식별자', max_length=50)),
                ('place_name', models.CharField(help_text='장소명', max_length=100)),
                ('distance', models.CharField(blank=True, help_text="사용자로부터의 거리 (예: '1.2km')", max_length=20, null=True)),
                ('category', models.CharField(blank=True, help_text='장소 카테고리 (카페, 식당, 관광지 등)', max_length=50, null=True)),
                ('address', models.CharField(blank=True, help_text='기본 주소', max_length=255, null=True)),
                ('road_address', models.CharField(blank=True, help_text='도로명 주소', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, help_text='전화번호', max_length=50, null=True)),
                ('card_image', models.ImageField(blank=True, help_text='카드 이미지', null=True, upload_to=taro.models.taro_card_image_upload_path)),
                ('recommendation_reason', models.TextField(blank=True, help_text='AI가 추천한 이유', null=True)),
                ('card_position', models.IntegerField(help_text='카드 덱에서의 위치 (1-25)')),
                ('draw_round', models.IntegerField(default=1, help_text='몇 번째 뽑기에서 나온 카드인지 (1: 초기, 2: 다시뽑기)')),
                ('kakao_place_id', models.CharField(blank=True, help_text='카카오 장소 ID', max_length=50, null=True)),
                ('google_place_id', models.CharField(blank=True, help_text='구글 장소 ID', max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='위도', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='경도', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='카드 생성 시간')),
                ('place', models.ForeignKey(blank=True, help_text='연결된 장소 (기존 Place 모델)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='places.place')),
                ('conversation', models.ForeignKey(help_text='이 카드가 속한 대화 세션', on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='taro.taroconversation')),
            ],
            options={
                'verbose_name': '타로 카드',
                'verbose_name_plural': '타로 카드들',
            },
        ),
        migrations.CreateModel(
            name='TaroQuestionTemplate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question_text', models.TextField(help_text='질문 내용')),
                ('question_category', models.CharField(choices=[('location_preference', '위치 선호도'), ('activity_type', '활동 유형'), ('atmosphere', '분위기'), ('time_preference', '시간 선호도'), ('group_size', '그룹 크기'), ('budget', '예산'), ('weather', '날씨 관련'), ('mood', '기분/감정'), ('special_occasion', '특별한 날'), ('food_preference', '음식 선호도')], help_text='질문 카테고리', max_length=50)),
                ('answer_choices', models.JSONField(default=taro.models.default_json, help_text='답변 선택지 리스트')),
                ('weight', models.IntegerField(default=1, help_text='질문 가중치 (AI 선택 시 참고)')),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='질문 생성 시간')),
            ],
            options={
                'verbose_name': '타로 질문 템플릿',
                'verbose_name_plural': '타로 질문 템플릿들',
                'indexes': [models.Index(fields=['question_category'], name='taro_taroqu_questio_cbcaa2_idx'), models.Index(fields=['weight'], name='taro_taroqu_weight_f4a662_idx'), models.Index(fields=['is_active'], name='taro_taroqu_is_acti_b577fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaroCartItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('session_key', models.CharField(db_index=True, help_text='사용자 세션 키', max_length=64)),
                ('selection_note', models.TextField(blank=True, help_text='사용자가 작성한 선택 메모', null=True)),
                ('priority', models.IntegerField(default=0, help_text='우선순위 (높을수록 우선)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='장바구니 추가 시간')),
                ('card', models.ForeignKey(help_text='선택된 타로 카드', on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='taro.tarocard')),
            ],
            options={
                'verbose_name': '타로 장바구니 아이템',
                'verbose_name_plural': '타로 장바구니 아이템들',
                'indexes': [models.Index(fields=['session_key'], name='taro_taroca_session_5fa648_idx'), models.Index(fields=['priority'], name='taro_taroca_priorit_48a611_idx')],
                'unique_together': {('session_key', 'card')},
            },
        ),
        migrations.AddIndex(
            model_name='tarocard',
            index=models.Index(fields=['conversation', 'draw_round'], name='taro_taroca_convers_f8dba9_idx'),
        ),
        migrations.AddIndex(
            model_name='tarocard',
            index=models.Index(fields=['card_position'], name='taro_taroca_card_po_1ac5f0_idx'),
        ),
        migrations.AddIndex(
            model_name='tarocard',
            index=models.Index(fields=['kakao_place_id'], name='taro_taroca_kakao_p_093ac1_idx'),
        ),
        migrations.AddIndex(
            model_name='tarocard',
            index=models.Index(fields=['google_place_id'], name='taro_taroca_google__da3cb6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tarocard',
            unique_together={('conversation', 'card_position', 'draw_round')},
        ),
    ]
